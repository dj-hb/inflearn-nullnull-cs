섹션 1. 컴공 이론을 위한 기초체력 다지기



* 1비트와 디지털
  - 1bit (소문자, 단수형, 복수형으로 쓰지 않는다)
  - 전기 스위치 1개
  - 상태 ... on 은 1, off 는 0
  - 2진수
  - bit 가 나오면? 경우의 수를 따져봐야 한다.
  - 4bit --> 16
  - 8 4 2 1

* 4비트와 16진수 그리고 진법변환
  - 16진수는 익숙해져야 한다...
  - 2진수, 16진수 변환! 10진수도!
  - 4비트는 16진수 한 자리 숫자다.
  - 0xF4 --> 16진수 두 자리 숫자? 8비트다!

* 16진수 표기가 사용되는 예
  - 색상 표현, 컴퓨터 하드웨어 주소 표현, 메모리 값 표현
  - RGB (0 ~ 255)
    - 하나의 색상에 8bit
    - 128 64 32 16 8 4 2 1
  - 24bit + 8bit(알파값?) --> 32bit 트루칼라??
  - 결론
    - Digital(0, 1) --> bit --> 4bit 는 16진수 1자리 --> 컴퓨터에서 16진수 많이 씀

* 외워야 할 단위 체계와 숫자
  - byte 단위부터 '용량'을 논하기 시작
  - 1byte 는 8개의 비트
  - 1바이트는 영문자 한 글자가 저장될 수 있는 메모리 크기
  - 컴퓨터는 CPU + RAM 이라고 봐도 과언이 아니다. 나머지는 이 두 놈을 위해 존재
  - 한글은 한 글자에 2바이트 필요...
  - 4비트 --> 16가지 경우의 수
  - 8비트 --> 256가지 경우의 수
  - 16비트는 65536가지 경우의 수
  - 1byte 는 8bit
  - 1024byte 는 1Kbyte (1KB)
  - 64KB 는 65536 bit
  - 킬로 메가 기가 테라 페타 엑사 제타 요타

* 컴퓨터가 글자를 다루는 방법
  - 코드체계 (숫자 --> 글자) 연결, 렌더링
  - ASCII
  - 숫자 1과 문자 1을 구별해야 한다. (16진수로는 엄연히 다르니까!)
  - Binary (숫자와 글자를 구별하지 않고 정보를 말할 때)
  - 빈칸(스페이스), 개행(0D 0A) 전부 문자다...

* 컴퓨터가 사진을 다루는 방법
  - 투명도(알파채널) -> RGB'A'
  - 모든 픽셀, 각 화소 별 RGB를 다 들고 있으면? 비트맵 (raw 비트맵?)
    - 너무 용량이 크다 - 통째로 쓰는 경우는 거의 없음
  - 그래서 인터넷 환경에서는 JPEG 등 다른 방식으로 압축해서 사용/저장
    - ex. 위치와 갯수 등을 명시하여 화소 하나하나 일일이 RGB를 기록하지 않아도 된다.
          (영상/이미지 압축의 원리 중 하나)