섹션 2. 넓고 얕은 컴퓨터 구조



* 디지털 회로와 덧셈

  - CPU 제작...!
    - CPU는 디지털 회로로 이루어져 있다.
  
  - AND, OR, XOR(exclusive OR), Not

  - CPU - 산술 연산을 할 수 있는 계산기

  - 스위치 하나는 1bit와 같다.

  - 2진수 1 + 1은 2진수 10

    - A + B 에서 A가 1, B가 1일 때
      XOR 연산 결과 S 는 0이다.
      AND 연산 결과 C 는 1이다. (자리올림 Carry)
      결과는 1(C) 0(S)

    - A가 0, B가 1일 때
      XOR 연산 결과 S는 1이다.
      AND 연산 결과 C는 0이다.
      결과는 0(C), 1(S)
    
    - 반가산기
      - 16진수 두 자리 수를 더하는 건
        8비트 두 개를 더하는 것과 같다
        (ex. 0x41 + 0x2F)
      - 반가산기 8개가 필요하다?
        - 자리올림까지 고려해야 한다. --> 전가산기
      - 전가산기 ... 반가산기 2개랑 OR게이트 1개



* 컴퓨터가 뺄셈하는 방법

  - 보수 complement
    - 더해서 자릿수가 10이 되는 수 (4는 6에 대한 10의 보수)
    - 13 - 6 = 7
    - 13 + 4 - 10 = 7 (보수를 '더하고' 십의 자리를 1 낮추는 방법)

  - 2진수에서는? 2의 보수
    - 2의 보수는 ... 1의 보수 +1 ... Not 연산 후 +1

  - 13 - 6 을 4비트(16진수)로 해보자
    - 13은 1101, 6은 0110
    - 0110(6)에 대한 2의 보수는? Not(0110) +1 --> 1001 + 1 --> 1010(10)
    - 1101(13) + 1010(10) --> 0111(7) (4비트 범위 밖으로 나가는 자리올림은 버림)

  - 곱셈? 여러 번 더하면 됨

  - 나눗셈? 여러 번 빼면 됨 ... 사칙연산!

  - 지금까지 이야기한 건 '정수'에 대한 내용

  - 실수에 대한 내용이 궁금하다면?
    - IEEE 754 표준
      부동소수점 표현 관련, 부동소수점 오차 어쩌구 ~ 이건 외워서 되는 게 아님



* 